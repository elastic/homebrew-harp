# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class Harp < Formula
  desc "Secret management toolchain"
  homepage "https://github.com/elastic/harp"
  license "Apache-2.0"
  stable do
    on_macos do
      if Hardware::CPU.intel?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.2/harp-darwin-amd64-v0.2.2.tar.xz"
        sha256 "8a12089a8f0e6e1b791dff85e57578458348404e362cbb809eecc4ad2b6fce2c"
      elsif Hardware::CPU.arm?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.2/harp-darwin-arm64-v0.2.2.tar.xz"
        sha256 "09aa135ad9944ec96da4664a9d970b3b1dcfb5384e237b8313eeafc4e9cb6eb5"
      end
    end
    on_linux do
      if Hardware::CPU.intel?
        if Hardware::CPU.is_64_bit?
          url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.2/harp-linux-amd64-v0.2.2.tar.xz"
          sha256 "dc8126526ea875d688137b0d82cedc14a92a96447ac243cb4754b4a0a661243b"
        end
      elsif Hardware::CPU.arm?
        if Hardware::CPU.is_64_bit?
          url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.2/harp-linux-arm64-v0.2.2.tar.xz"
          sha256 "308c4349ae7238f7d8181ce49e70c1d2ea77e93b4101f0ec46be14184d9024e9"
        else
          url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.2/harp-linux-arm7-v0.2.2.tar.xz"
          sha256 "81fcd489140ca2405df9e424833b2cbf7a9ba8e79613834676252131c6a54332"
        end
      end
    end
  end

  # Source definition
  head do
    url "https://github.com/elastic/harp.git", branch: "main"

    # build dependencies
    depends_on "go" => :build
    depends_on "mage" => :build
  end

  def install
    ENV.deparallelize

    if build.head?
      # Prepare build environment
      ENV["GOPATH"] = buildpath
      (buildpath/"src/github.com/elastic/harp").install Dir["{*,.git,.gitignore}"]

      # Mage tools
      ENV.prepend_path "PATH", buildpath/"tools/bin"

      # In github.com/elastic/harp command
      cd "src/github.com/elastic/harp/cmd/harp" do
        system "go", "mod", "vendor"
        system "mage", "compile"
      end

      # Install builded command
      cd "src/github.com/elastic/harp/cmd/harp/bin" do
        # Install binaries
        if OS.mac? && Hardware::CPU.arm?
          bin.install "harp-darwin-arm64" => "harp"
        elsif OS.mac?
          bin.install "harp-darwin-amd64" => "harp"
        elsif OS.linux?
          bin.install "harp-linux-amd64" => "harp"
        end
      end
    elsif OS.mac? && Hardware::CPU.arm?
      # Install binaries
      bin.install "harp-darwin-arm64" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
