# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class Harp < Formula
  desc "Secret management toolchain"
  homepage "https://github.com/elastic/harp"
  license "Apache-2.0"
  stable do
    on_macos do
      if Hardware::CPU.intel?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.1/harp-darwin-amd64-v0.2.1.tar.xz"
        sha256 "24f86badb9c3f871efa41281446b7a6d8b50ed435c7b1ac57ef00c06aea455de"
      elsif Hardware::CPU.arm?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.1/harp-darwin-arm64-v0.2.1.tar.xz"
        sha256 "80c001293990933d7c503ec26fd761f72becaa346638aa1d9e8f21cdf59f7752"
      end
    end
    on_linux do
      if Hardware::CPU.intel?
        if Hardware::CPU.is_64_bit?
          url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.1/harp-linux-amd64-v0.2.1.tar.xz"
          sha256 "6fdbc2a96ad90ee23c9b39df846f241001796ce11caec84332d07c0ee975d259"
        end
      elsif Hardware::CPU.arm?
        if Hardware::CPU.is_64_bit?
          url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.1/harp-linux-arm64-v0.2.1.tar.xz"
          sha256 "d8c4c0d8c477581bf8b659e8a7bb6f19129160ed5c357d069ede775c876fdb36"
        else
          url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.1/harp-linux-arm7-v0.2.1.tar.xz"
          sha256 "f9b09102d9fab5bc695e4c3474dc4614f8cf153f70172a70370eef1dd1977a59"
        end
      end
    end
  end

  # Source definition
  head do
    url "https://github.com/elastic/harp.git", branch: "main"

    # build dependencies
    depends_on "go" => :build
    depends_on "mage" => :build
  end

  def install
    ENV.deparallelize

    if build.head?
      # Prepare build environment
      ENV["GOPATH"] = buildpath
      (buildpath/"src/github.com/elastic/harp").install Dir["{*,.git,.gitignore}"]

      # Mage tools
      ENV.prepend_path "PATH", buildpath/"tools/bin"

      # In github.com/elastic/harp command
      cd "src/github.com/elastic/harp/cmd/harp" do
        system "go", "mod", "vendor"
        system "mage", "compile"
      end

      # Install builded command
      cd "src/github.com/elastic/harp/cmd/harp/bin" do
        # Install binaries
        if OS.mac? && Hardware::CPU.arm?
          bin.install "harp-darwin-arm64" => "harp"
        elsif OS.mac?
          bin.install "harp-darwin-amd64" => "harp"
        elsif OS.linux?
          bin.install "harp-linux-amd64" => "harp"
        end
      end
    elsif OS.mac? && Hardware::CPU.arm?
      # Install binaries
      bin.install "harp-darwin-arm64" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
