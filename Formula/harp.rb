# Code generated by Harp build tool
class Harp < Formula
  desc "Secret management toolchain"
  homepage "https://github.com/elastic/harp"
  license "Apache 2.0"
  bottle :unneeded

  # Stable build
  stable do
  	if OS.mac? && Hardware::CPU.arm?
	  url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.1.12/harp-darwin-arm64-v0.1.12.tar.xz"
      sha256 "473fc84abd596a266b0cabf106bb6b0db6bab0d9ba4c67f7d1b053df0b19d9f0"
    elsif OS.mac?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.1.12/harp-darwin-amd64-v0.1.12.tar.xz"
      sha256 "9cf6f8bb73eb1379117813561ceda0ebf3d71941617a16dfb4eda13bb045e26d"
    elsif OS.linux?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.1.12/harp-linux-amd64-v0.1.12.tar.xz"
      sha256 "90a596b4b3c0e96fa6993a2d796a528843356ebd384f26c3aa5bb911c896b9f1"
    end
  end

  # Source definition
  head do
    url "https://github.com/elastic/harp.git", :branch => "main"

    # build dependencies
    depends_on "go" => :build
    depends_on "mage" => :build
  end

  def install
    ENV.deparallelize

    unless build.head?
      # Install binaries
      if OS.mac? && Hardware::CPU.arm?
        bin.install "harp-darwin-arm64" => "harp"
      elsif OS.mac?
        bin.install "harp-darwin-amd64" => "harp"
      elsif OS.linux?
        bin.install "harp-linux-amd64" => "harp"
      end
    else
      # Prepare build environment
      ENV["GOPATH"] = buildpath
      (buildpath/"src/github.com/elastic/harp").install Dir["{*,.git,.gitignore}"]

      # Mage tools
      ENV.prepend_path "PATH", buildpath/"tools/bin"

      # In github.com/elastic/harp command
      cd "src/github.com/elastic/harp/cmd/harp" do
        system "go", "mod", "vendor"
        system "mage", "compile"
      end

      # Install builded command
      cd "src/github.com/elastic/harp/cmd/harp/bin" do
        # Install binaries
        if OS.mac? && Hardware::CPU.arm?
          bin.install "harp-darwin-arm64" => "harp"
        elsif OS.mac?
          bin.install "harp-darwin-amd64" => "harp"
        elsif OS.linux?
          bin.install "harp-linux-amd64" => "harp"
        end
      end
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end