# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class Harp < Formula
  desc "Secret management toolchain"
  homepage "https://github.com/elastic/harp"
  version "0.2.6"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-darwin-amd64.tar.gz"
      sha256 "f3e38fe5b28597cde5e4086921a59e2a1bee5db0a599560ceec02c14510c5e4c"
    elsif Hardware::CPU.arm?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-darwin-arm64.tar.gz"
      sha256 "ac9691c34ddbe8dc87bd48bfff31da1e561c649c721b953e1c3db07061bb1e3b"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-linux-amd64.tar.gz"
        sha256 "e27879714d1d0bf9e38669738daffa3e16afc1e44b6d62136d26e9a7785d8cf7"
      end
    elsif Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-linux-arm64.tar.gz"
        sha256 "dc61ef6b1e9673e8e9a859c89f1209f3b3a4ede47cc81096d9404e8ec7ea948a"
      else
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-linux-arm7.tar.gz"
        sha256 "93153306ba0abf04eab6847543e832eda5d3fa4b6344b800a29befa9a791b385"
      end
    end
  end

  conflicts_with "harp-fips", because: "harp-fips also ships a 'harp' binary"

  def install
    ENV.deparallelize

    # Install binaries
    if OS.mac? && Hardware::CPU.arm?
      bin.install "harp-darwin-arm64" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
