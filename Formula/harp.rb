# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class Harp < Formula
  desc "Secret management toolchain"
  homepage "https://github.com/elastic/harp"
  version "0.2.8"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elastic/harp/releases/download/v0.2.8/harp-darwin-amd64.tar.gz"
      sha256 "a44c3130fe8ec49c98f5fb7fa3e076781a5e85f90acdd87dab4b8baad6d7a855"
    elsif Hardware::CPU.arm?
      url "https://github.com/elastic/harp/releases/download/v0.2.8/harp-darwin-arm64.tar.gz"
      sha256 "d2b095fdab2fed8e29596e5c4077d1cd8df415ce8844ce48239803f0f2364a94"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/v0.2.8/harp-linux-amd64.tar.gz"
        sha256 "831c0f36b28b08531023d7a5d45198b969a39fad91a9c84290f76257670a3bb6"
      end
    elsif Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/v0.2.8/harp-linux-arm64.tar.gz"
        sha256 "63083d498b98e440bdf0ca0d41b2c2013cc449826ba491c6238452ba56e8e6ba"
      else
        url "https://github.com/elastic/harp/releases/download/v0.2.8/harp-linux-arm.tar.gz"
        sha256 "0a0fd323d5c8efdc07b42d6573cd242dc89de7116f5c6a6e74fcd86aa0ccfacf"
      end
    end
  end

  conflicts_with "harp-fips", because: "harp-fips also ships a 'harp' binary"

  def install
    ENV.deparallelize

    # Install binaries
    if OS.mac?
      if Hardware::CPU.arm?
        bin.install "harp-darwin-arm64" => "harp"
      else
        bin.install "harp-darwin-amd64" => "harp"
      end
    elsif OS.linux?
      if Hardware::CPU.arm?
        if Hardware::CPU.is_64_bit?
          bin.install "harp-linux-arm64" => "harp"
        else
          bin.install "harp-linux-arm" => "harp"
        end
      else
        if Hardware::CPU.is_64_bit?
          bin.install "harp-linux-amd64" => "harp"
        end
      end
    end

    # Exclude from Gatekeeper quarantine
    if MacOS.version >= :catalina && /com.apple.quarantine/.match?(Utils.safe_popen_read("xattr", "#{bin}/harp"))
      (bin/"harp").chmod 0755
      begin
        system "xattr", "-d",
                        "com.apple.quarantine",
                        bin/"harp"
      ensure
        (bin/"harp").chmod 0555
      end
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_predicate bin/"harp", :exist?
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
