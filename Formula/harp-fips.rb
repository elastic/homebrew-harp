# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class HarpFips < Formula
  desc "Secret management toolchain (FIPS)"
  homepage "https://github.com/elastic/harp"
  version "0.2.7"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.7/harp-darwin-amd64-fips.tar.gz"
      sha256 "3ea8f560e41801a1527cb91956d7d3e97ab359540caf5d5d000c3dbfeccc2efa"
    elsif Hardware::CPU.arm?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.7/harp-darwin-arm64-fips.tar.gz"
      sha256 "ed8e203d15355e89fbc958523f62e6c9e30a419e2316f23699ecd729a5191b34"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.7/harp-linux-amd64-fips.tar.gz"
        sha256 "22677dbce5bf9319948845a7114589c163228abe943227afc301da6e4f6b88ba"
      end
    elsif Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.7/harp-linux-arm64-fips.tar.gz"
        sha256 "1de15f0ef983e779493869e96b06a61f600d83880886a906c94cdea799eda7ba"
      else
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.7/harp-linux-arm7-fips.tar.gz"
        sha256 "8c4d8a93d08b25f65f4ef1ba23019ff9029e3f531ff4dfa0cd9d6c7730651c7e"
      end
    end
  end

  conflicts_with "harp", because: "harp also ships a 'harp' binary"

  def install
    ENV.deparallelize

    # Install binaries
    if OS.mac? && Hardware::CPU.arm?
      bin.install "harp-darwin-arm64-fips" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64-fips" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64-fips" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
