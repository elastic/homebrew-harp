# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class HarpFips < Formula
  desc "Secret management toolchain (FIPS)"
  homepage "https://github.com/elastic/harp"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.4/harp-darwin-amd64-fips.tar.gz"
      sha256 "ea5184c1cae502ef362ce25823b7b3429606547cc324f20b60ad6638417d61e4"
    elsif Hardware::CPU.arm?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.4/harp-darwin-arm64-fips.tar.gz"
      sha256 "2a2029d2b95732845b8ed89c2f9007d819def9e3eb892873db4edcec16a0db96"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.4/harp-linux-amd64-fips.tar.gz"
        sha256 "0942e77f7982e930c5cc0e25bd4800bff5648ef10197ee14125cad66ee927291"
      end
    elsif Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.4/harp-linux-arm64-fips.tar.gz"
        sha256 "9fe1e11effcdc603076621c179edf344b54c888192014085e034fd2ae3b64b31"
      else
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.4/harp-linux-arm7-fips.tar.gz"
        sha256 "5b242efe3d1ed7791363781a1a16306ad354d4c3c37dc976117a599c27e94c30"
      end
    end
  end

  conflicts_with "harp", because: "harp also ships a 'harp' binary"

  def install
    ENV.deparallelize

    # Install binaries
    if OS.mac? && Hardware::CPU.arm?
      bin.install "harp-darwin-arm64-fips" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64-fips" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64-fips" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
