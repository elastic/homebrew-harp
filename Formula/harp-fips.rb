# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class HarpFips < Formula
  desc "Secret management toolchain (FIPS)"
  homepage "https://github.com/elastic/harp"
  version "0.2.6"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-darwin-amd64-fips.tar.gz"
      sha256 "2a00973780d1a6f5d88fd4afa5f0ff8cb4205fc39716c2de6aeaa324004a11c5"
    elsif Hardware::CPU.arm?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-darwin-arm64-fips.tar.gz"
      sha256 "4de8806ef18223227ccc5939bf105ff7dd4d7b32e05a0d5cf5bb3cddabc8ab84"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-linux-amd64-fips.tar.gz"
        sha256 "35010f1a97e365ff632bf2c19f9764a22af2705d52d41dff17001a63ddca3faf"
      end
    elsif Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-linux-arm64-fips.tar.gz"
        sha256 "4de5e56e1c7927bc1bb72f3aaf00e4e69aea30f7b0cf0384cd77608c5139d5cd"
      else
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.6/harp-linux-arm7-fips.tar.gz"
        sha256 "dda755ecd9c5c464c8807a5669c225fd64569b2c3272c60e6ad32fbb00b7c64c"
      end
    end
  end

  conflicts_with "harp", because: "harp also ships a 'harp' binary"

  def install
    ENV.deparallelize

    # Install binaries
    if OS.mac? && Hardware::CPU.arm?
      bin.install "harp-darwin-arm64-fips" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64-fips" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64-fips" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
