# typed: false
# frozen_string_literal: true

# Code generated by Harp build tool
class HarpFips < Formula
  desc "Secret management toolchain (FIPS)"
  homepage "https://github.com/elastic/harp"
  version "0.2.5"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.5/harp-darwin-amd64-fips.tar.gz"
      sha256 "e8ab3834b5ee82cdffad51931e48324e8bc88510c8a8bc84bbbbffaafe1bc540"
    elsif Hardware::CPU.arm?
      url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.5/harp-darwin-arm64-fips.tar.gz"
      sha256 "a70958aed4de1487565db562fba1fff87635a6102e0a5a2abd71aadae90df3c1"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.5/harp-linux-amd64-fips.tar.gz"
        sha256 "c1d48735ee47564122ed8555f94dc7428d4ea480cc7dc0ef723bd538acc64ec6"
      end
    elsif Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.5/harp-linux-arm64-fips.tar.gz"
        sha256 "f7c1fb1a575d2216cacd85bedea2950f862496bcd20933f8136e8aafc92d2a80"
      else
        url "https://github.com/elastic/harp/releases/download/cmd%2Fharp%2Fv0.2.5/harp-linux-arm7-fips.tar.gz"
        sha256 "4a97ab4974fb576c731e5c0cf31d35fae8bc4532c16460946e71318fdb833391"
      end
    end
  end

  conflicts_with "harp", because: "harp also ships a 'harp' binary"

  def install
    ENV.deparallelize

    # Install binaries
    if OS.mac? && Hardware::CPU.arm?
      bin.install "harp-darwin-arm64-fips" => "harp"
    elsif OS.mac?
      bin.install "harp-darwin-amd64-fips" => "harp"
    elsif OS.linux?
      bin.install "harp-linux-amd64-fips" => "harp"
    end

    # Final message
    ohai "Install success!"
  end

  def caveats
    <<~EOS
      If you have previously built harp from source, make sure you're not using
      $GOPATH/bin/harp instead of this one. If that's the case you can simply run
      rm -f $GOPATH/bin/harp
    EOS
  end

  test do
    assert_match version.to_s, shell_output("#{bin}/harp version")
  end
end
